package com.example.landofchokolate.repository;

import com.example.landofchokolate.model.Category;
import org.springframework.data.domain.Page;
import org.springframework.data.domain.Pageable;
import org.springframework.data.jpa.repository.JpaRepository;
import org.springframework.data.jpa.repository.Query;
import org.springframework.data.repository.query.Param;
import org.springframework.stereotype.Repository;

import java.util.List;
import java.util.Optional;

@Repository
public interface CategoryRepository extends JpaRepository<Category, Long> {

    /**
     * –ü—Ä–æ–≤–µ—Ä—è–µ—Ç —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –ø–æ –∏–º–µ–Ω–∏
     */
    boolean existsByName(String name);

    /**
     * –ù–∞—Ö–æ–¥–∏—Ç –∫–∞—Ç–µ–≥–æ—Ä–∏—é –ø–æ —Ç–æ—á–Ω–æ–º—É –∏–º–µ–Ω–∏
     */
    Optional<Category> findByName(String name);

    /**
     * –ü–æ–∏—Å–∫ –∫–∞—Ç–µ–≥–æ—Ä–∏–π –ø–æ –∏–º–µ–Ω–∏ (—Å–æ–¥–µ—Ä–∂–∏—Ç –ø–æ–¥—Å—Ç—Ä–æ–∫—É, –∏–≥–Ω–æ—Ä–∏—Ä—É—è —Ä–µ–≥–∏—Å—Ç—Ä)
     */
    List<Category> findByNameContainingIgnoreCase(String name);

    /**
     * –ü–æ–∏—Å–∫ –∫–∞—Ç–µ–≥–æ—Ä–∏–π –ø–æ –∏–º–µ–Ω–∏, –∏–≥–Ω–æ—Ä–∏—Ä—É—è —Ä–µ–≥–∏—Å—Ç—Ä
     */
    List<Category> findByNameIgnoreCase(String name);


    // üÜï –î–æ–±–∞–≤–∏—Ç—å —ç—Ç–æ—Ç –º–µ—Ç–æ–¥:
    boolean existsBySlug(String slug);

    // üÜï –ò —ç—Ç–æ—Ç –¥–ª—è –ø–æ–∏—Å–∫–∞ –ø–æ slug:
    Optional<Category> findBySlug(String slug);


    List<Category> findBySlugIsNull();


    /**
     * –ù–∞—Ö–æ–¥–∏—Ç –∞–∫—Ç–∏–≤–Ω—ã–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ —Å –ø–∞–≥–∏–Ω–∞—Ü–∏–µ–π
     */
    Page<Category> findByIsActiveTrue(Pageable pageable);

    /**
     * –ù–∞—Ö–æ–¥–∏—Ç –∞–∫—Ç–∏–≤–Ω—ã–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –ø–æ –∏–º–µ–Ω–∏ —Å –ø–∞–≥–∏–Ω–∞—Ü–∏–µ–π
     */
    Page<Category> findByIsActiveTrueAndNameContainingIgnoreCase(String name, Pageable pageable);

    /**
     * –ü–æ–ª—É—á–∏—Ç—å —Ç–æ–ø–æ–≤—ã–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ —Å –ª–∏–º–∏—Ç–æ–º
     */
    List<Category> findByIsActiveTrueAndIsFeaturedTrueOrderByNameAsc(Pageable pageable);


    Optional<Category> findBySlugAndIsActiveTrue(String slug);


    /**
     * –ù–∞—Ö–æ–¥–∏—Ç –∞–∫—Ç–∏–≤–Ω—ã–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –¥–ª—è –Ω–∞–≤–∏–≥–∞—Ü–∏–∏ —Å –ª–∏–º–∏—Ç–æ–º
     * –°–æ—Ä—Ç–∏—Ä—É–µ–º –ø–æ isFeatured (—Ç–æ–ø–æ–≤—ã–µ —Å–Ω–∞—á–∞–ª–∞), –∑–∞—Ç–µ–º –ø–æ –∏–º–µ–Ω–∏
     */
    @Query(value = "SELECT * FROM category c WHERE c.is_active = true " +
            "ORDER BY c.is_featured DESC, c.view_count DESC, c.name ASC LIMIT :limit",
            nativeQuery = true)
    List<Category> findActiveCategories(@Param("limit") int limit);


}