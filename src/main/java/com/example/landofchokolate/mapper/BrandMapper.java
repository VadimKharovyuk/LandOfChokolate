package com.example.landofchokolate.mapper;
import com.example.landofchokolate.dto.brend.BrandClientDto;
import com.example.landofchokolate.dto.brend.BrandResponseDto;
import com.example.landofchokolate.dto.brend.CreateBrandDto;
import com.example.landofchokolate.model.Brand;
import org.springframework.stereotype.Component;

import java.util.ArrayList;
import java.util.List;
import java.util.stream.Collectors;

@Component
public class BrandMapper {

    public Brand toEntity(CreateBrandDto createBrandDto) {
        if (createBrandDto == null) {
            return null;
        }

        Brand brand = new Brand();
        brand.setName(createBrandDto.getName());
        brand.setDescription(createBrandDto.getDescription());
        brand.setSlug(createBrandDto.getSlug());
        brand.setMetaDescription(createBrandDto.getMetaDescription());
        brand.setMetaTitle(createBrandDto.getMetaTitle());
        brand.setShortDescription(createBrandDto.getShortDescription());

        return brand;
    }

    // –ú–µ—Ç–æ–¥ –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Å—É—â–µ—Å—Ç–≤—É—é—â–µ–π entity
    public void updateEntityFromDto(CreateBrandDto dto, Brand existingBrand) {
        if (dto == null || existingBrand == null) {
            return;
        }

        existingBrand.setName(dto.getName());
        existingBrand.setDescription(dto.getDescription());
        existingBrand.setMetaDescription(dto.getMetaDescription());
        existingBrand.setMetaTitle(dto.getMetaTitle());
        existingBrand.setShortDescription(dto.getShortDescription());
    }

    // –ö–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏—è –¥–ª—è –∞–¥–º–∏–Ω—Å–∫–æ–π –ø–∞–Ω–µ–ª–∏ (–ø–æ–ª–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è)
    public BrandResponseDto toResponseDto(Brand brand) {
        if (brand == null) {
            return null;
        }

        BrandResponseDto dto = new BrandResponseDto();
        dto.setId(brand.getId());
        dto.setName(brand.getName());
        dto.setDescription(brand.getDescription());
        dto.setImageUrl(brand.getImageUrl());
        dto.setSlug(brand.getSlug());
        dto.setMetaDescription(brand.getMetaDescription());
        dto.setMetaTitle(brand.getMetaTitle());
        dto.setCreatedAt(brand.getCreatedAt());
        dto.setUpdatedAt(brand.getUpdatedAt());
        dto.setShortDescription(brand.getShortDescription());

        return dto;
    }

    // üÜï –ö–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏—è –¥–ª—è –∫–ª–∏–µ–Ω—Ç—Å–∫–æ–π —á–∞—Å—Ç–∏ (–±–µ–∑ —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏)
    public BrandClientDto toClientDto(Brand brand) {
        if (brand == null) {
            return null;
        }

        return new BrandClientDto(
                brand.getId(),
                brand.getName(),
                brand.getDescription(),
                brand.getShortDescription(),     // ‚úÖ 4-–π –ø–∞—Ä–∞–º–µ—Ç—Ä
                brand.getImageUrl(),             // ‚úÖ 5-–π –ø–∞—Ä–∞–º–µ—Ç—Ä
                brand.getSlug(),                 // ‚úÖ 6-–π –ø–∞—Ä–∞–º–µ—Ç—Ä
                brand.getMetaTitle(),            // ‚úÖ 7-–π –ø–∞—Ä–∞–º–µ—Ç—Ä
                brand.getMetaDescription()       // ‚úÖ 8-–π –ø–∞—Ä–∞–º–µ—Ç—Ä
        );
    }

    // –°–ø–∏—Å–∫–∏ –¥–ª—è –∞–¥–º–∏–Ω—Å–∫–æ–π –ø–∞–Ω–µ–ª–∏
    public List<BrandResponseDto> toResponseDtoList(List<Brand> brands) {
        if (brands == null || brands.isEmpty()) {
            return new ArrayList<>();
        }

        return brands.stream()
                .map(this::toResponseDto)
                .collect(Collectors.toList());
    }

    // üÜï –°–ø–∏—Å–∫–∏ –¥–ª—è –∫–ª–∏–µ–Ω—Ç—Å–∫–æ–π —á–∞—Å—Ç–∏
    public List<BrandClientDto> toClientDtoList(List<Brand> brands) {
        if (brands == null || brands.isEmpty()) {
            return new ArrayList<>();
        }

        return brands.stream()
                .map(this::toClientDto)
                .collect(Collectors.toList());
    }
}